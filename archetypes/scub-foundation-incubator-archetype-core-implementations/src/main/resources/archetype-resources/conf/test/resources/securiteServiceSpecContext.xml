<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd"> 


  <!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * SECURITE SPECIFIQUE ENV DEV & TEST * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
    *
    *	- Vous pouvez definir ici les provider spécifique à l'environement de dev, par defaut le systéme utilise une authentification en memoire.
    *
    *   - Pour l'authentification locale et le changement de role pour appel de service externe en Run_As vous pouvez 
    *	  ajouter AutoAuthentificationRemoteInvocationFactory spécifique à l'environement de dev.
    *	  Preconisez l'utilisation de variable que vous pouvez definir dans le fichier conf/dev/filters/filters.properties.
    *
    *	<bean id="gestcomRemoteInvocationFactory" class="org.scub.foundation.base.noyau.securite.AutoAuthenticatedRemoteInvocationFactory">
	*		<property name="authenticationProvider" ref="authenticationProvider"/>
	*		<property name="runAsManager" ref="gestcomRunAsManager"/>
	*		<property name="login" value="${statistiques.login}"/>
	*		<property name="motDePasse" value="${statistiques.motDePasse}"/>
	*		<property name="runAsRole" value="${runAs.role}"/>
	*	</bean>
	*
	*	<bean id="gestcomRunAsManager" class="org.acegisecurity.runas.RunAsManagerImpl">
    * 		<property name="key"><value>${runAs.key.gestcom}</value></property>
    * 		<property name="rolePrefix" value="${rolePrefix.gestcom}"/>
 	*	</bean>
    *
	*
    * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  -->

	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="${pom.artifactId}_user" password="${pom.artifactId}_user"
					authorities="${pom.artifactId}_user" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

</beans:beans>